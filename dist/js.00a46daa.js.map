{"version":3,"sources":["js/Profile.js","js/Conversation.js","js/index.js"],"names":["Profile","nombre","imagen","voice","propiedades","rate","lang","pitch","color","volume","Conversation","chat","conversacion","map","texto","msg","SpeechSynthesisUtterance","text","author","onstart","innerHTML","speechSynthesis","speak","window","navigator","vibrate","Ayrton_voice","Robot_voice","Breadman_voice","Ayrton_image","Robot_image","Breadman_image","onvoiceschanged","getVoices","forEach","name","ayrtonProfile","robotProfile","breadmanProfile","conversation","document","querySelector","onclick","style","visibility","addMessage"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"../src","sourcesContent":["\n//Creamos la clase profile y le pasamos por el constructor el nombre del personaje, la imagen, la voz y las propiedades. \n\nexport default class Profile {\n    constructor(nombre, imagen, voice, propiedades) {\n        //\n        this.nombre = nombre; //El nombre de este perfil es el nombre que le paso por parametro cuando creo el objeto en index.js\n        this.imagen = imagen; //La imagen de este perfil es la imagen que le paso por parametro cuando creo el objeto en index.js\n        this.voice = voice; //La voz de este perdil es la voz que le paso por parametro cuando creo el objeto en index.js\n        this.rate = propiedades.rate;\n        this.lang = propiedades.lang;\n        this.pitch = propiedades.pitch;\n        this.color = propiedades.color;\n        this.volume = propiedades.volume;\n    }\n\n}\n\n\n\n\n\n","//Una clase Conversation para trabajar y controlar las conversaciones de todos los personajes. \n//Una conversación se podría definir como un array de objetos, donde cada uno contiene la frase y el personaje que la pronuncia.\n\nexport default class Conversation { //Creamos la clase conversacion \n    constructor(chat) { //Le pasamos un chat por el constructor \n        this.chat = chat;\n    }\n\n    addMessage(conversacion) {\n        conversacion.map((texto) => { //El método map() crea un nuevo array con los resultados de la llamada a la función indicada aplicados a cada uno de sus elementos.\n            var msg = new SpeechSynthesisUtterance();\n            msg.text = texto.text;\n            msg.voice = texto.author.voice;\n            msg.pitch = texto.author.pitch;\n            msg.rate = texto.author.rate;\n            msg.volume = texto.author.volume;\n            msg.color = texto.author.color;\n            msg.imagen = texto.author.imagen;\n            msg.nombre = texto.author.nombre;\n\n            msg.onstart = () => {\n                this.chat.innerHTML += `\n                <div class=\"texto\" style=\"color: ${msg.color}; background-color:black; display: flex; align-items: center\"> \n                <img src=\"${msg.imagen}\" width=\\\"150px\\\" height=\\\"150px\\\"> &nbsp; \n                ${msg.nombre}: \n                ${msg.text} \n                </div>`;\n            }\n            speechSynthesis.speak(msg);\n            window.navigator.vibrate(200);\n\n        });\n    }\n}\n\n\n\n\n\n\n","import Profile from './Profile.js';\nimport Conversation from './Conversation.js';\n\n\n//Declaramos las variables para las voces de los personajes\nvar Ayrton_voice;\nvar Robot_voice;\nvar Breadman_voice;\n//Declaramos las imagenes que va a tener cada personaje\nvar Ayrton_image = \"https://www.alfabetajuega.com/wp-content/uploads/2019/12/pokemon-ash-pokeball-770x433.jpg\"\nvar Robot_image = \"https://i.imgur.com/pmI53WO.png\"\nvar Breadman_image = \"https://image.freepik.com/vector-gratis/kawaii-cute-breakfast-rebanada-pan-icono_24877-12893.jpg\"\n\n//La onvoiceschanged propiedad de la SpeechSynthesis representa un controlador de eventos que se ejecutará cuando la lista de \n//SpeechSynthesisVoiceobjetos que devolvería el SpeechSynthesis.getVoices()método haya cambiado (cuando se active el evento de cambio de voces ).\nspeechSynthesis.onvoiceschanged = function () {\n    //Devuelve una lista de objetos que representan todas las voces disponibles en el dispositivo actual y hacemos un for para recorrerlas todas y \n    //determinar la voz de cada personaje\n    speechSynthesis.getVoices().forEach(function (voice) {\n        if (voice.name === 'Google español de Estados Unidos') {\n            Ayrton_voice = voice\n        }\n        if (voice.name === 'Google italiano') {\n            Robot_voice = voice\n        }\n        if (voice.name === 'Google Bahasa Indonesia') {\n            Breadman_voice = voice\n        }\n    });\n\n    //Aquí declaramos cada personaje como una nueva clase Profile a la cual le pasamos el nombre, la imagen y la voz del personaje, asi como el lenguaje, el color \n    //el volumen, tono, velocidad. \n\n    const ayrtonProfile = new Profile(\"Ayrton\", Ayrton_image, Ayrton_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#74ff2e\",\n        volume: 1\n    });\n\n    const robotProfile = new Profile(\"Robot\", Robot_image, Robot_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#f8ff13\",\n        volume: 1\n    });\n\n    const breadmanProfile = new Profile(\"Breadman\", Breadman_image, Breadman_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#e800ff\",\n        volume: 1\n    });\n\n    //Cremos un objeto conversation cuando coga el identificador del chat\n    const conversation = new Conversation(document.querySelector('#chat')); //creamos una constante chat y le pasamos a la clase conversacion el chat con document.query\n    //Cuando hagamos click en el boton\n    // $(document.querySelector(\"#button\")).on('touchstart click', function () { /* do something... */\n    document.querySelector(\"button\").onclick = () => {\n        //El chat se vuelve visible una vez le damos al boton del play *********************\n        document.querySelector('#chat').style.visibility = 'visible';\n        //Añadimos al objeto conversation los mensajes\n        conversation.addMessage([\n            { author: ayrtonProfile, text: \"¡Hola a todos! ¿Qué tal están?\" },\n            { author: robotProfile, text: \"Muy bien, ¡gracias!\" },\n            { author: breadmanProfile, text: \"Yo también muy bien\" },\n            { author: ayrtonProfile, text: \"El robot habla con un acento un tanto raro...\" },\n            { author: robotProfile, text: \"Es que soy del norte\" },\n        ]);\n    };\n}\n\n\n"]}