{"version":3,"sources":["js/Profile.js","js/Conversation.js","js/index.js"],"names":["Profile","nombre","imagen","voice","propiedades","rate","lang","pitch","color","volume","Conversation","chat","conversacion","map","texto","msg","SpeechSynthesisUtterance","text","author","onstart","innerHTML","speechSynthesis","speak","window","navigator","vibrate","Ayrton_voice","Robot_voice","Breadman_voice","Ayrton_image","Robot_image","Breadman_image","onvoiceschanged","getVoices","forEach","name","ayrtonProfile","robotProfile","breadmanProfile","conversation","document","querySelector","$","on","style","visibility","addMessage"],"mappings":"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","file":"js.4dcfc397.js","sourceRoot":"../src","sourcesContent":["\n//Creamos la clase profile y le pasamos por el constructor el nombre del personaje, la imagen, la voz y las propiedades. \n\nexport default class Profile {\n    constructor(nombre, imagen, voice, propiedades) {\n        //\n        this.nombre = nombre; //El nombre de este perfil es el nombre que le paso por parametro cuando creo el objeto en index.js\n        this.imagen = imagen; //La imagen de este perfil es la imagen que le paso por parametro cuando creo el objeto en index.js\n        this.voice = voice; //La voz de este perdil es la voz que le paso por parametro cuando creo el objeto en index.js\n        this.rate = propiedades.rate;\n        this.lang = propiedades.lang;\n        this.pitch = propiedades.pitch;\n        this.color = propiedades.color;\n        this.volume = propiedades.volume;\n    }\n\n}\n\n\n\n\n\n","//Una clase Conversation para trabajar y controlar las conversaciones de todos los personajes. \n//Una conversación se podría definir como un array de objetos, donde cada uno contiene la frase y el personaje que la pronuncia.\n\nexport default class Conversation { //Creamos la clase conversacion \n    constructor(chat) { //Le pasamos un chat por el constructor \n        this.chat = chat;\n    }\n\n    addMessage(conversacion) {\n        conversacion.map((texto) => { //El método map() crea un nuevo array con los resultados de la llamada a la función indicada aplicados a cada uno de sus elementos.\n            var msg = new SpeechSynthesisUtterance();\n            msg.text = texto.text;\n            msg.voice = texto.author.voice;\n            msg.pitch = texto.author.pitch;\n            msg.rate = texto.author.rate;\n            msg.volume = texto.author.volume;\n            msg.color = texto.author.color;\n            msg.imagen = texto.author.imagen;\n            msg.nombre = texto.author.nombre;\n\n            msg.onstart = () => {\n                this.chat.innerHTML += `\n                <div class=\"texto\" style=\"color: ${msg.color}; background-color:black; display: flex; align-items: center\"> \n                <img src=\"${msg.imagen}\" width=\\\"150px\\\" height=\\\"150px\\\"> &nbsp; \n                ${msg.nombre}: \n                ${msg.text} \n                </div>`;\n            }\n            speechSynthesis.speak(msg);\n            window.navigator.vibrate(200);\n\n        });\n    }\n}\n\n\n\n\n\n\n","import Profile from './Profile.js';\nimport Conversation from './Conversation.js';\n\n\n//Declaramos las variables para las voces de los personajes\nvar Ayrton_voice;\nvar Robot_voice;\nvar Breadman_voice;\n//Declaramos las imagenes que va a tener cada personaje\nvar Ayrton_image = \"https://www.alfabetajuega.com/wp-content/uploads/2019/12/pokemon-ash-pokeball-770x433.jpg\"\nvar Robot_image = \"https://i.imgur.com/pmI53WO.png\"\nvar Breadman_image = \"https://image.freepik.com/vector-gratis/kawaii-cute-breakfast-rebanada-pan-icono_24877-12893.jpg\"\n\n//La onvoiceschanged propiedad de la SpeechSynthesis representa un controlador de eventos que se ejecutará cuando la lista de \n//SpeechSynthesisVoiceobjetos que devolvería el SpeechSynthesis.getVoices()método haya cambiado (cuando se active el evento de cambio de voces ).\nspeechSynthesis.onvoiceschanged = function () {\n    //Devuelve una lista de objetos que representan todas las voces disponibles en el dispositivo actual y hacemos un for para recorrerlas todas y \n    //determinar la voz de cada personaje\n    speechSynthesis.getVoices().forEach(function (voice) {\n        if (voice.name === 'Google español de Estados Unidos') {\n            Ayrton_voice = voice\n        }\n        if (voice.name === 'Google italiano') {\n            Robot_voice = voice\n        }\n        if (voice.name === 'Google Bahasa Indonesia') {\n            Breadman_voice = voice\n        }\n    });\n\n    //Aquí declaramos cada personaje como una nueva clase Profile a la cual le pasamos el nombre, la imagen y la voz del personaje, asi como el lenguaje, el color \n    //el volumen, tono, velocidad. \n\n    const ayrtonProfile = new Profile(\"Ayrton\", Ayrton_image, Ayrton_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#74ff2e\",\n        volume: 1\n    });\n\n    const robotProfile = new Profile(\"Robot\", Robot_image, Robot_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#f8ff13\",\n        volume: 1\n    });\n\n    const breadmanProfile = new Profile(\"Breadman\", Breadman_image, Breadman_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#e800ff\",\n        volume: 1\n    });\n\n    //Cremos un objeto conversation cuando coga el identificador del chat\n    const conversation = new Conversation(document.querySelector('#chat')); //creamos una constante chat y le pasamos a la clase conversacion el chat con document.query\n    //Cuando hagamos click en el boton\n    $(document.querySelector(\"#button\")).on('touchstart click', function () { /* do something... */\n        //document.querySelector(\"button\").onclick = () => {\n        //El chat se vuelve visible una vez le damos al boton del play *********************\n        document.querySelector('#chat').style.visibility = 'visible';\n        //Añadimos al objeto conversation los mensajes\n        conversation.addMessage([\n            { author: ayrtonProfile, text: \"¡Hola a todos! ¿Qué tal están?\" },\n            { author: robotProfile, text: \"Muy bien, ¡gracias!\" },\n            { author: breadmanProfile, text: \"Yo también muy bien\" },\n            { author: ayrtonProfile, text: \"El robot habla con un acento un tanto raro...\" },\n            { author: robotProfile, text: \"Es que soy del norte\" },\n        ]);\n    });\n}\n\n\n"]}