{"version":3,"sources":["js/Profile.js","js/Conversation.js","js/index.js"],"names":["Profile","nombre","imagen","voice","propiedades","rate","lang","pitch","color","volume","Conversation","chat","conversacion","map","texto","msg","SpeechSynthesisUtterance","text","author","onstart","innerHTML","speechSynthesis","speak","window","navigator","vibrate","Ayrton_voice","Robot_voice","Breadman_voice","Ayrton_image","Robot_image","Breadman_image","onvoiceschanged","getVoices","forEach","name","ayrtonProfile","robotProfile","breadmanProfile","conversation","document","querySelector","ontouchstart","style","visibility","addMessage"],"mappings":"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","file":"js.d1f8cafe.js","sourceRoot":"../src","sourcesContent":["\n//Creamos la clase profile y le pasamos por el constructor el nombre del personaje, la imagen, la voz y las propiedades. \n\nexport default class Profile {\n    constructor(nombre, imagen, voice, propiedades) {\n        //\n        this.nombre = nombre; //El nombre de este perfil es el nombre que le paso por parametro cuando creo el objeto en index.js\n        this.imagen = imagen; //La imagen de este perfil es la imagen que le paso por parametro cuando creo el objeto en index.js\n        this.voice = voice; //La voz de este perdil es la voz que le paso por parametro cuando creo el objeto en index.js\n        this.rate = propiedades.rate;\n        this.lang = propiedades.lang;\n        this.pitch = propiedades.pitch;\n        this.color = propiedades.color;\n        this.volume = propiedades.volume;\n    }\n\n}\n\n\n\n\n\n","//Una clase Conversation para trabajar y controlar las conversaciones de todos los personajes. \n//Una conversación se podría definir como un array de objetos, donde cada uno contiene la frase y el personaje que la pronuncia.\n\nexport default class Conversation { //Creamos la clase conversacion \n    constructor(chat) { //Le pasamos un chat por el constructor \n        this.chat = chat;\n    }\n\n    addMessage(conversacion) {\n        conversacion.map((texto) => { //El método map() crea un nuevo array con los resultados de la llamada a la función indicada aplicados a cada uno de sus elementos.\n            var msg = new SpeechSynthesisUtterance();\n            msg.text = texto.text;\n            msg.voice = texto.author.voice;\n            msg.pitch = texto.author.pitch;\n            msg.rate = texto.author.rate;\n            msg.volume = texto.author.volume;\n            msg.color = texto.author.color;\n            msg.imagen = texto.author.imagen;\n            msg.nombre = texto.author.nombre;\n\n            msg.onstart = () => {\n                this.chat.innerHTML += `\n                <div class=\"texto\" style=\"color: ${msg.color}; background-color:black; display: flex; align-items: center\"> \n                <img src=\"${msg.imagen}\" width=\\\"150px\\\" height=\\\"150px\\\"> &nbsp; \n                ${msg.nombre}: \n                ${msg.text} \n                </div>`;\n            }\n            speechSynthesis.speak(msg);\n            window.navigator.vibrate(200);\n\n        });\n    }\n}\n\n\n\n\n\n\n","import Profile from './Profile.js';\nimport Conversation from './Conversation.js';\n\n//Declaramos las variables para las voces de los personajes\nvar Ayrton_voice;\nvar Robot_voice;\nvar Breadman_voice;\n//Declaramos las imagenes que va a tener cada personaje\nvar Ayrton_image = \"https://www.alfabetajuega.com/wp-content/uploads/2019/12/pokemon-ash-pokeball-770x433.jpg\"\nvar Robot_image = \"https://i.imgur.com/pmI53WO.png\"\nvar Breadman_image = \"https://image.freepik.com/vector-gratis/kawaii-cute-breakfast-rebanada-pan-icono_24877-12893.jpg\"\n\n//La onvoiceschanged propiedad de la SpeechSynthesis representa un controlador de eventos que se ejecutará cuando la lista de \n//SpeechSynthesisVoiceobjetos que devolvería el SpeechSynthesis.getVoices()método haya cambiado (cuando se active el evento de cambio de voces ).\nspeechSynthesis.onvoiceschanged = function () {\n    //Devuelve una lista de objetos que representan todas las voces disponibles en el dispositivo actual y hacemos un for para recorrerlas todas y \n    //determinar la voz de cada personaje\n    speechSynthesis.getVoices().forEach(function (voice) {\n        if (voice.name === 'Google español de Estados Unidos') {\n            Ayrton_voice = voice\n        }\n        if (voice.name === 'Google italiano') {\n            Robot_voice = voice\n        }\n        if (voice.name === 'Google Bahasa Indonesia') {\n            Breadman_voice = voice\n        }\n    });\n\n    //Aquí declaramos cada personaje como una nueva clase Profile a la cual le pasamos el nombre, la imagen y la voz del personaje, asi como el lenguaje, el color \n    //el volumen, tono, velocidad. \n\n    const ayrtonProfile = new Profile(\"Ayrton\", Ayrton_image, Ayrton_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#74ff2e\",\n        volume: 1\n    });\n\n    const robotProfile = new Profile(\"Robot\", Robot_image, Robot_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#f8ff13\",\n        volume: 1\n    });\n\n    const breadmanProfile = new Profile(\"Breadman\", Breadman_image, Breadman_voice, {\n        lang: \"es\",\n        rate: 1.0,\n        pitch: 0.5,\n        color: \"#e800ff\",\n        volume: 1\n    });\n\n    //Cremos un objeto conversation cuando coga el identificador del chat\n    const conversation = new Conversation(document.querySelector('#chat')); //creamos una constante chat y le pasamos a la clase conversacion el chat con document.query\n    //Cuando hagamos click en el boton\n    document.querySelector(\"button\").ontouchstart = () => {\n        //El chat se vuelve visible una vez le damos al boton del play\n        document.querySelector('#chat').style.visibility = 'visible';\n        //Añadimos al objeto conversation los mensajes\n        conversation.addMessage([\n            { author: ayrtonProfile, text: \"¡Hola a todos! ¿Qué tal están?\" },\n            { author: robotProfile, text: \"Muy bien, ¡gracias!\" },\n            { author: breadmanProfile, text: \"Yo también muy bien\" },\n            { author: ayrtonProfile, text: \"El robot habla con un acento un tanto raro...\" },\n            { author: robotProfile, text: \"Es que soy del norte\" },\n        ]);\n    };\n\n}\n\n\n"]}